I've been working at Google as a software engineer since last year after I escaped unemployment and so far it's been a little disappointing. I've reversed zero length list, inverted zero binary trees, and solved zero dynamic programming problema. But at least I get to eat free food every day. Okay but in seriousness I'm going to give you my first impressions of working at Google. One from just like the overall employee experience, just the culture and stuff like that, and also from the technical side. Of course I'm not going to leak anything but I think this will give you a pretty good picture of what engineering is like at Google. To start with I have to say that the culture is pretty good. In terms of just friendliness, like people are very nice. It's definitely not a toxic place at all. I know that's of the rumor sometimes about fang companies that yeah you get paid a lot but they're really stressful. New Google definitely is not the case. Maybe there are other tech companies that do have a toxic culture. With Google everybody is super nice and maybe it's like fake niceness who knows but it's definitely better than dealing with people who are mean to you. In terms of work-life balance I will say that from the rumors that I heard about online haven't been quite true. Some people make Google out to be a place where you can just kind of sit on your hands and just like you know sit at the beach all day not do anything not have to work or anything like that. That's definitely not been the case for me. I mean there are there is work to be done. There Ace deadlines all that kind of stuff. That said the work-life balance is not crazy bad either. I I probably work about 40 to 45 hours a week. I think that's probably about average in my team. I'm there's teams that work a lot less. There's probably some teams that work a lot more but I think this is a pretty fair range. It's little bit more than I expected to be working at Google which is probably why I don't upload as frequently as I used to but at the same time I'm not going to complain. It's a pretty good job. Now I'm sure must people have heard about Google's free food and yes the free food is pretty good. I usually eat breakfast lunch and dinner at the office so I probably save a good amount of money on that which is nice because I'm pretty cheap but I will say that some of the offices are pretty inconsistent with the food. Like when I went to New York City the food there was tremendous. It was like gourmet chefs cooking food and there were so many different options such high quality food but over at the Seattle office where I usually work it's definitely not as good as New York City. It's not even half an good. Usually they have the same thing almost every single day for breakfast. It gets kind of old after a while but I'm cheap I sat it anyway but overall no complaints, I mean there's free snacks free drinks and all that stuff so free food is something you're looking forward to. I don't think you're going to be disappointed. In terms of the tech this is really the most interesting part for me and maybe for a lot of you especially the engineers who are watching this. Google has a ton of internal tools Librarinn frameworks and all that stuff. I don't think there's a single company single tech pompany that has the amount of tools that Google does and a lot of the tools that first at Google have become open source, & lot of really interesting work has gone into distributed systems at Google. If you've heard of MapReduce and all the things that spun out from that and because of that lot of the internal tools make things really really easy and that's kind of the positive side of it. There's definitely a negative side of it which I'm going to mostly talk about now. In my opinion there's lut of abatraction and probably too much abstraction. Bon of the internal tools are nothing like you would are in the open source world. Sometimes people refer to Google as like tach island because it's no different from everything sise that's going on in the tel community in terms of open source and the downside of that is sometimes your prios knowledge about working with tools and Exameworks does not apply at all. Like at Google there's tools that you wld never ses anywhere else and that makes it hard to work with. If something goes wrong if there's a bug or issue that you have there's like 20 layers of abstraction and you don't even know what's going on under the hood anymore. You don't know is it a bug with the tool that you're using or did you do something wrong. It's really hard to figure this out and it makes it even harder that honestly the documentation the internal documentation at Google is not amazing at all which was pretty surprising to me. More frequently you're better off just reading the source code. You might have heard that Google has like a mono repo which basically all the source code for Google is in one single repository and it's actually a lot easier if you're having an issue with like a library or something just to read the source code just to see exactly what it's doing than to actually go and read the documentation because it's either out of date or just completely missing. There's a few internal tools at Google that I've used that I feel like now I can't live without but at the same time I would probably prefer working at a company that uses like a public cloud or like more open source tools so I kind of know what's actually going on under the hood. I think sometimen Google abstracts away too much so you're not really Inarning what's going on but also if there's an issue the abstraction makes it hard to deal with. You might know that Google does have its public cloud Google eload platfom but in many cases the internal tools that Google has are actually superior to the ones that are on Google cloud platform which is also why most teams at Google have not been using their public cloud that they sell to other people. They actually use internal tools because they're usually more powerful and T people are just used to using the internal tools. That's different than what Amazon does at Inant from what I've heard most of the time at Amazon you're actually using AWS you're not using junta cand internal tool but there's definitely trade-offs like one of the good things is that metines design questions are completely taken care of like very few times are people at Google anking oh what database should I use how should I design the database you know how should I scale it blah blah blah because Google has a database called Spanner which pretty much breaks cap theorem and it's pretty much the go-to database like do I need a scalable database that's consistent and highly available well let me just use Spanner like it's not even a question people are just like kay just throw that in Spanner who cares it takes care of like 55 percent of problems that you're ever going to need and the best way I can describe the internal tools the abstraction and the unintuitiveness that kind of comes with it sometines is probably with an analogy you might already have some concepts of programing like for example writing functions right you can write a function then you can reuse that function by calling it in many different places sometimes there's internal tools at Google that feel very different from anything you've used before it feel like I'm with a bag of His wometimes like okay I throw a bunch of Mis on a table I'm you know doing something with them and something breaks for some reason and then I take the problem taior ngineer I show them okay like what am I doing wrong can you help mut here and then let's say they point to one of the brown M&Ms and say hey hey that's not an H&M that's a rhesus pinces that's a classic mistats to make and 'e just sitting there like okay guess I wasn't supposed to do that like I don't even know what I'm doing anymore this doesn't even feel like programming that I'm used to and that's kind of what it's like you really have to shift your windret to things like the Google way there's a lot of like abstractions and you're not dealing with stuff that you're used to dealing with you're instead dealing with those Google created sbstractions which are meant to be helpful and usually they are but sometimes they just make lot more difficult in case I sounded negative in this video I do want to say I can't imagine corporate job being much better than working at Google it really has been an incredible experience so far I'm super grateful every day I wake up and feel like I don't deserve to have such a good job I'm really enjoying it as far I wish I had more time to do YouTube but I do still have a few tricks up my sleeve so please stay tuned we have some new stuff coming up not only on the YouTube channel but also on neatcode.io so definitely stay tuned if you found this helpful please like and subscribe it really supports the channel a lot and hopefully I'll see you pretty soon thanks for watching.